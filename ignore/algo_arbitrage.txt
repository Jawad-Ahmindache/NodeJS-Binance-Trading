Scénario : On veut faire de l'arbitrage sur ADA_USDT sur trois plateformes Binance,Kucoin,Bitfinex



1- On check dans quelle plateforme est disponible l'ADA parmi nos api config grâce à la méthode "isCurrencyAvailable"
2- On met dans un array listExchange les API qui contiennent bien de l'ADA
3- On fait passer ce Array listExchange dans un Main
4- On crée un array "exchangeToThreat"
5- Le main va créer 5 thread, puis dans ces thread on va check le array listExchange, 


$countListExchange = count($listExchange)
while(countListExchange > 0){ 
	
	$key = array_rand($listExchange); //On prend une clé aléatoire du tableau
	$object = listExchange[$key]; // on stocke l'objet dans le thread
	unset(listExchange[$key); // on enleve l'objet du tableau
	array_values($listExchange); // on réorganise le tableau
	$countListExchange = count($listExchange);

		
	on appelle getPrice: 								
	Si on obtient bien le prix on envoie le prix dans la propriété "$this->actualPrice" puis l'objet correspondant dans 												ExchangeToThreat
	- Si on obtient pas le prix on envoie une erreur [EXCHANGE] [COIN] : getPrice impossible de recup le prix
	
			
}	
THREAD->cancel

6- Si count(exchangeToThreat) >= 2 :
		$highPrice = exchangeToThreat[0]; //objet exchange contenant le plus gros prix
		for($i = 1; $i < count($exchangeToThreat); $i++){
			if($exchangeToThreat[$i]->actualPrice < $highPrice)
				$highPrice = $exchangeToThreat[$i];
		}
    Si < 2 : 
	on s'arrete ici on passe pas au 7
7-
		